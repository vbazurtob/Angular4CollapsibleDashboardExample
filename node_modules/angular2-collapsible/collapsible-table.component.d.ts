import { OnInit, OnChanges, SimpleChanges, ElementRef, QueryList, AfterContentInit } from '@angular/core';
import { CollapsibleTableRowComponent } from './collapsible-table-row.component';
import { CollapsibleService } from './collapsible.service';
export declare class CollapsibleTableComponent implements OnInit, OnChanges, AfterContentInit {
    private el;
    private collapsibleService;
    bordered: boolean;
    borderedHorizontally: boolean;
    borderedVertically: boolean;
    striped: boolean;
    stripedOddColor: string;
    stripedOddTextColor: string;
    stripedEvenColor: string;
    stripedEvenTextColor: string;
    highlight: boolean;
    highlightColor: string;
    highlightTextColor: string;
    activeColor: string;
    activeTextColor: string;
    centered: boolean;
    responsive: boolean;
    select: boolean;
    selectMultipleRows: boolean;
    selectColor: string;
    selectTextColor: string;
    allowDeselectingRows: boolean;
    allowKeyboardNavigation: boolean;
    noTextSelect: boolean;
    fixedTableHeight: string;
    tabindex: number;
    selectedRows: Array<number>;
    type: 'accordion' | 'expandable';
    collapsibleTableRows: QueryList<CollapsibleTableRowComponent>;
    mouseDownHold: boolean;
    constructor(el: ElementRef, collapsibleService: CollapsibleService);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    focus(): void;
    addSelectedRow(index: number): void;
    removeSelectedRow(index: number): void;
    clearSelectedRows(): void;
    deselectAllRows(): void;
    selectRow(index: number): void;
    selectRows(firstRowIndex: number, lastRowIndex: number): void;
    toggleRowSelection(index: number): void;
    updateStriped(row: CollapsibleTableRowComponent): void;
    updateHighlight(row: CollapsibleTableRowComponent): void;
    updateActive(row: CollapsibleTableRowComponent): void;
    updateSelect(row: CollapsibleTableRowComponent): void;
    updateTable(change?: string): void;
    keydown(event: KeyboardEvent): void;
    mousedown(): void;
    mouseup(): void;
}
