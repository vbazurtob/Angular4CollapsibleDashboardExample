import { OnInit, AfterContentInit, ElementRef } from '@angular/core';
import { DomSanitizer, SafeStyle } from '@angular/platform-browser';
import { CollapsibleTableRowDetailComponent } from './collapsible-table-row-detail.component';
import { CollapsibleService } from './collapsible.service';
export declare class CollapsibleTableRowComponent implements OnInit, AfterContentInit {
    private el;
    private sanitizer;
    private collapsibleService;
    private static EASE_OUT_QUAD;
    static DEFAULT_STRIPED_ODD_ROW_COLOR: string;
    static DEFAULT_STRIPED_EVEN_ROW_COLOR: string;
    static DEFAULT_HIGHLIGHT_ROW_COLOR: string;
    static DEFAULT_ACTIVE_ROW_COLOR: string;
    static DEFAULT_SELECTED_ROW_COLOR: string;
    static DEFAULT_ROW_TEXT_COLOR: string;
    detail: CollapsibleTableRowDetailComponent;
    rowTextColor: string;
    rowBackgroundColor: string;
    backgroundTransitionDuration: string;
    backgroundTransitionTimingFunction: SafeStyle;
    selected: boolean;
    isHeadRow: boolean;
    isBodyRow: boolean;
    isOddRow: boolean;
    isEvenRow: boolean;
    isParentStriped: boolean;
    isParentHighlight: boolean;
    parentAllowsSelect: boolean;
    parentAllowsSelectMultipleRows: boolean;
    parentStripedRowBackgroundColor: string;
    parentStripedRowTextColor: string;
    parentHighlightRowBackgroundColor: string;
    parentHighlightRowTextColor: string;
    activeRowBackgroundColor: string;
    activeRowTextColor: string;
    selectedRowBackgroundColor: string;
    selectedRowTextColor: string;
    parentAllowsDeselectingRows: boolean;
    index: number;
    private parentCollapsibleTable;
    private prevSelectedRows;
    private dragSelection;
    constructor(el: ElementRef, sanitizer: DomSanitizer, collapsibleService: CollapsibleService);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    updateRow(): void;
    getHeight(): number;
    private isLeftMouseButton(event);
    mousedown(event: MouseEvent): void;
    mouseup(event: MouseEvent): void;
    mouseenter(event: MouseEvent): void;
    mouseleave(event: MouseEvent): void;
    click(event: MouseEvent): void;
}
